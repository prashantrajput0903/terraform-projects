name: EC2-deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - main

env:
  AMI: ${{ vars.AMI }}
  INSTANCE_TYPE: ${{vars.INSTANCE_TYPE}}
  ROOT_PATH: './terraform'
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6
      
    
      - name: terraform Init
        working-directory: ${{ env.ROOT_PATH }}
        run: terraform init 
      
      - name: terraform plan
        working-directory: ${{ env.ROOT_PATH }}
        run: |
           terraform plan -out=tfplan \
           -var "AWS_ACCESS_KEY_ID=${{ env.AWS_SECRET_ACCESS_KEY }}" \
           -var "AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}" \
           -var "ami=${{ env.AMI }}" \
           -var "instance_type= ${{ env.INSTANCE_TYPE}}"
      
      - name: Terraform Apply
        working-directory: ${{ env.ROOT_PATH }}
        run: terraform apply -auto-approve tfplan

        
      